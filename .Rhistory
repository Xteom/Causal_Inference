---
title: "Food Trucks"
---
title: "Food Trucks"
## Reporte de
El objetivo de este reporte presentar un análisis sobre la industria de los food truck en la Ciudad de México. Todos los análisis se realizaron con el censo *foodtruck* el cual contiene todos los food trucks registrados ante la COFEPRIS. Los datos que ocupamos en este análisis nos fueron proporcionados por *CDMX a la Carta*, de una encuesta que levantaron. La información que contiene la encuesta proviene de los foodtrucks con 20% más reviews.
```{r, include=FALSE}
library(tidyverse)
library(ggplot2)
foodtruck <- read_csv("foodtrucks.csv")
foodtruck20 <- read_csv("foodtrucks20.csv")
set.seed(69)
# obtenemos el tamaño de muestra (20% del total del censo)
n <- nrow(foodtruck)
sample_size <- round(0.2 * n)
muestra_aleatoria <- foodtruck[sample(n, sample_size )]
foodtruck_sample <- foodtruck[sample(n, sample_size), ]
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]
mustra_aleatoria
muestra_aleatoria
print(muestra_aleatoria)
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]
print(muestra_aleatoria)
print(muestra_aleatoria)
print(muestra_aleatoria)
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]
muestra_aleatoria
# Gráfico de densidad para Number_of_Customers
ggplot(bind_rows(
# Gráfico de densidad para Number_of_Customers
ggplot(bind_rows(
foodtruck %>% mutate(Source = "Censo"),
foodtruck_sample %>% mutate(Source = "Muestra")
),
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "blue", "Muestra" = "red")) +
theme_minimal()
# obtenemos el tamaño de muestra (20% del total del censo)
n <- nrow(foodtruck)
sample_size <- round(0.2 * n)
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]
# obtenemos el tamaño de muestra (20% del total del censo)
n <- nrow(foodtruck)
sample_size <- round(0.2 * n)
# obtenemos el tamaño de muestra (20% del total del censo)
n <- nrow(foodtruck)
sample_size <- round(0.2 * n)
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]
# Gráfico de densidad para Number_of_Customers
ggplot(bind_rows(
foodtruck %>% mutate(Source = "Censo"),
foodtruck_sample %>% mutate(Source = "Muestra")
),
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "blue", "Muestra" = "red")) +
theme_minimal()
# Gráfico de densidad para Number_of_Customers
ggplot(bind_rows(
foodtruck %>% mutate(Source = "Censo"),
muestra_aleatoria %>% mutate(Source = "Muestra")
),
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "blue", "Muestra" = "red")) +
theme_minimal()
ggplot(combined_data,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
combined_data <- bind_rows(
foodtruck %>% mutate(Source = "Censo"),
foodtruck20 %>% mutate(Source = "Muestra")
)
ggplot(combined_data, aes(x = Number_of_Customers, fill = Source)) +
geom_histogram(data = subset(combined_data, Source == "Censo"),
binwidth = 10, alpha = 0.5) +
geom_histogram(data = subset(combined_data, Source == "Muestra"),
binwidth = 10, alpha = 0.5) +
scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
labs(title = "Distribución de Número de Clientes",
x = "Number of Customers",
y = "Frecuencia",
fill = "Fuente") +
theme_minimal()
ggplot(combined_data,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
representatividad_dist1 + representatividad_hist1
representatividad_hist1 <- ggplot(combined_data, aes(x = Number_of_Customers, fill = Source)) +
geom_histogram(data = subset(combined_data, Source == "Censo"),
binwidth = 10, alpha = 0.5) +
geom_histogram(data = subset(combined_data, Source == "Muestra"),
binwidth = 10, alpha = 0.5) +
scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
labs(title = "Distribución de Número de Clientes",
x = "Number of Customers",
y = "Frecuencia",
fill = "Fuente") +
theme_minimal()
representatividad_dist1 <- ggplot(combined_data,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
representatividad_dist1 + representatividad_hist1
representatividad_dist1
representatividad_dist1 + representatividad_hist1
representatividad_hist1
representatividad_dist1 + representatividad_hist1
combined_data_ma <- bind_rows(
foodtruck %>% mutate(Source = "Censo"),
muestra_aleatoria %>% mutate(Source = "Muestra")
)
library(patchwork)
library(gridExtra)
# Gráfico de densidad para Number_of_Customers
ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
combined_data_ma <- bind_rows(
foodtruck %>% mutate(Source = "Censo"),
muestra_aleatoria %>% mutate(Source = "Muestra")
)
# Gráfico de densidad para Number_of_Customers
ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
combined_data_ma <- bind_rows(
foodtruck %>% mutate(Source = "Censo"),
muestra_aleatoria %>% mutate(Source = "Muestra Aleatoria")
)
# Gráfico de densidad para Number_of_Customers
ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
representatividad_hist2 <- ggplot(combined_data_ma,
aes(x = Number_of_Customers, fill = Source)) +
geom_histogram(data = subset(combined_data, Source == "Censo"),
binwidth = 10, alpha = 0.5) +
geom_histogram(data = subset(combined_data, Source == "Muestra Aleatoria"),
binwidth = 10, alpha = 0.5) +
scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
labs(title = "Histograma de Número de Clientes",
x = "Number of Customers",
y = "Frecuencia",
fill = "Fuente") +
theme_minimal()
# Gráfico de densidad para Number_of_Customers
representatividad_dist2 <- ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
theme_minimal()
grid.arrange(representatividad_dist2, representatividad_hist2, ncol = 2)
grid.arrange(representatividad_dist1, representatividad_hist1, ncol = 2)
grid.arrange(representatividad_dist2, representatividad_hist2, ncol = 1)
representatividad_hist2 <- ggplot(combined_data_ma,
aes(x = Number_of_Customers, fill = Source)) +
geom_histogram(data = subset(combined_data, Source == "Censo"),
binwidth = 10, alpha = 0.5) +
geom_histogram(data = subset(combined_data_ma, Source == "Muestra Aleatoria"),
binwidth = 10, alpha = 0.5) +
scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
labs(title = "Histograma de Número de Clientes",
x = "Number of Customers",
y = "Frecuencia",
fill = "Fuente") +
theme_minimal()
# Gráfico de densidad para Number_of_Customers
representatividad_dist2 <- ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Number_of_Customers: Censo vs Muestra Aleatoria",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
theme_minimal()
grid.arrange(representatividad_dist2, representatividad_hist2, ncol = 1)
source("~/.active-rstudio-document", echo=TRUE)
foodtruck
foodtruck$Cuisine_Type_unique
summary(foodtruck$Cuisine_Type)
foodtruck$Cuisine_Type
foodtruck20$Cuisine_Type
grid.arrange(representatividad_dist1, representatividad_hist1, ncol = 1)
combined_data_tacos <- bind_rows(
filter(foodtruck, Cuisine_Type == "Tacos") %>% mutate(Source = "Censo"),
filter(muestra_aleatoria, Cuisine_Type == "Tacos") %>% mutate(Source = "Muestra")
)
representatividad_hist_tacos <- ggplot(
combined_data_tacos, aes(x = Number_of_Customers, fill = Source)) +
geom_histogram(data = subset(combined_data_tacos, Source == "Censo"),
binwidth = 10, alpha = 0.5) +
geom_histogram(data = subset(combined_data_tacos, Source == "Muestra"),
binwidth = 10, alpha = 0.5) +
scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
labs(title = "Histograma de Número de Clientes de Taquerías",
x = "Number of Customers",
y = "Frecuencia",
fill = "Fuente") +
theme_minimal()
# Distribución de densidad para taquerías
representatividad_dist_tacos <- ggplot(
combined_data_tacos, aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes de Taquerías: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
theme_minimal()
# Combinar las gráficas en una sola visualización
grid.arrange(representatividad_dist_tacos, representatividad_hist_tacos, ncol = 1)
# Distribución de densidad para taquerías
representatividad_dist_tacos <- ggplot(
combined_data_tacos, aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes de Taquerías: Censo vs Muestra",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
theme_minimal()
# Combinar las gráficas en una sola visualización
grid.arrange(representatividad_dist_tacos, representatividad_hist_tacos, ncol = 1)
combined_data_tacos$Cuisine_Type
# Gráfico de densidad para Number_of_Customers
representatividad_dist2 <- ggplot(combined_data_ma,
aes(x = Number_of_Customers, color = Source)) +
geom_density() +
labs(title = "Distribución de Número de Clientes: Censo vs M.A.",
x = "Number of Customers",
y = "Densidad") +
scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
theme_minimal()
foodtruck20$Cuisine_Type.count()
foodtruck20.count(Cuisine_Type)
count(foodtruck20, Cuisine_Type)
#count(foodtruck20, Cuisine_Type)
filter(foodtruck, Cuisine_Type == "Tacos")$Menu_Price
#count(foodtruck20, Cuisine_Type)
filter(foodtruck20, Cuisine_Type == "Tacos")$Menu_Price
t_test_tacos <- t.test(filter(foodtruck20, Cuisine_Type == "Tacos")$Menu_Price,
filter(foodtruck20, Cuisine_Type != "Tacos")$Menu_Price,
conf.level = 0.95)
t_test_tacos
t_test_tacos$p.value
cat("La prueba de hipótesis nos da un P-value de",
t_test_tacos$p.value)
percentil_90 <- quantile(foodtruck20$Menu_Price, 0.9)
percentil_90
foodtruck20
return(p90/p10)
# función para el ratio
get_ratio <- function(data){
p90 <- quantile(data, 0.9)
p10 <- quantile(data, 0.1)
return(p90/p10)
}
#data: dataset (debe tener columna Menu_Price)
#n: número de submuestras
bootstrap_Menu_Price_ratios <- function(data, n){
repeticiones <- 1000
bootstrap_ratios <- numeric(1000)
for(i in 1:repeticiones){
# generamos una submuestra aleatoria de tamaño n
sample_data <- data$Menu_price[sample(nrow(data)), size = n, replace = TRUE]
#calculamos el ratio por cada submuestra
bootstrap_ratios[i] <- get_ratio(sample_data)
}
return{bootstrap_ratios}
#data: dataset (debe tener columna Menu_Price)
#n: número de submuestras
bootstrap_Menu_Price_ratios <- function(data, n){
repeticiones <- 1000
bootstrap_ratios <- numeric(1000)
for(i in 1:repeticiones){
# generamos una submuestra aleatoria de tamaño n
sample_data <- data$Menu_price[sample(nrow(data)), size = n, replace = TRUE]
#calculamos el ratio por cada submuestra
bootstrap_ratios[i] <- get_ratio(sample_data)
}
return(bootstrap_ratios)
}
mean_bootstrap1 <- mean(bootstrap_Menu_Price_ratios(foodtruck20, 200))
#data: dataset (debe tener columna Menu_Price)
#n: tamaño de submuestras
bootstrap_Menu_Price_ratios <- function(data, n){
repeticiones <- 1000
bootstrap_ratios <- numeric(repeticiones)
for(i in 1:repeticiones){
# Generamos una submuestra aleatoria de tamaño n
sample_data <- data$Menu_Price[sample(nrow(data), size = n, replace = TRUE)] # Corrección aquí
# Calculamos el ratio para cada submuestra
bootstrap_ratios[i] <- get_ratio(sample_data)
}
return(bootstrap_ratios)
}
# Aplicando la función al dataframe foodtruck20 y calculando la media de los ratios de bootstrap
mean_bootstrap1 <- mean(bootstrap_Menu_Price_ratios(foodtruck20, 200))
cat("Estimación puntual del ratio:", mean_bootstrap1, "\n")
hist_bootstrap1 <- ggplot(data.frame(bootstrap_ratios), aes(x = bootstrap_ratios)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ci[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ci[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
hist_bootstrap1 <- ggplot(data.f
hist_bootstrap1
hist_bootstrap1 <- ggplot(data.frame(bootstrap1), aes(x = bootstrap1)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ci[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ci[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
bootstrap1 <- bootstrap_Menu_Price_ratios(foodtruck20, 200)
# Aplicando la función al dataframe foodtruck20 y calculando la media de los ratios de bootstrap
mean_bootstrap1 <- mean(bootstrap1)
cat("Estimación puntual del ratio:", mean_bootstrap1, "\n")
hist_bootstrap1 <- ggplot(data.frame(bootstrap1), aes(x = bootstrap1)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ci[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ci[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
ic_bootsrap1 <- quantile(bootstrap_ratios, probs = c(0.025, 0.975))
ic_bootsrap1 <- quantile(bootstrap1, probs = c(0.025, 0.975))
cat("Intervalo de confianza del 95% para el ratio:", ci, "\n")
cat("Intervalo de confianza del 95% para el ratio:", ic_bootsrap1, "\n")
hist_bootstrap1 <- ggplot(data.frame(bootstrap1), aes(x = bootstrap1)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ic_bootsrap1[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ic_bootsrap1[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
hist_bootstrap1
bootstrap100 <- bootstrap_Menu_Price_ratios(foodtruck20, 100)
cat("Estimación puntual del ratio:", bootstrap100, " con muestras de 100 obs. \n")
mean_bootstrap100 <- mean(bootstrap100)
cat("Estimación puntual del ratio:", mean_bootstrap100, " con muestras de 100 obs. \n")
ic_bootstrap100 <- quantile(bootstrap100, probs = c(0.05, 0.95))
hist_bootstrap200 <- ggplot(data.frame(bootstrap200), aes(x = bootstrap200)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ic_bootstrap200[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ic_bootstrap200[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
hist_bootstrap200
bootstrap200 <- bootstrap_Menu_Price_ratios(foodtruck20, 200)
mean_bootstrap200 <- mean(bootstrap200)
ic_bootstrap200 <- quantile(bootstrap200, probs = c(0.025, 0.975))
cat("Estimación puntual del ratio:", mean_bootstrap200, " con muestras de 200 obs. \n")
cat("Intervalo de confianza del 95% para el ratio:", ic_bootsrap1, "\n")
hist_bootstrap200 <- ggplot(data.frame(bootstrap200), aes(x = bootstrap200)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
geom_vline(xintercept = ic_bootstrap200[1], color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = ic_bootstrap200[2], color = "red", linetype = "dashed", size = 1) +
labs(title = "Histograma de Ratios de Bootstrap con Intervalo de Confianza del 95%",
x = "Ratio (Percentil 90 / Percentil 10)",
y = "Frecuencia") +
theme_minimal()
hist_bootstrap200
bootstrap100 <- bootstrap_Menu_Price_ratios(foodtruck20, 100)
mean_bootstrap100 <- mean(bootstrap100)
cat("Estimación puntual del ratio:", mean_bootstrap100, " con muestras de 100 obs. \n")
ic_bootstrap100 <- quantile(bootstrap100, probs = c(0.05, 0.95))
