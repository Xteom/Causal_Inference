---
title: "Tarea 1: Food Trucks en CDMX"
subtitle: "Inferencia Causal"
format: pdf
author: Mateo De La Roche Macías
editor: visual
---

El objetivo de este reporte presentar un análisis sobre la industria de los food truck en la Ciudad de México. Todos los análisis se realizaron con el censo *foodtruck* el cual contiene todos los food trucks registrados ante la COFEPRIS. Los datos que ocupamos en este análisis nos fueron proporcionados por *CDMX a la Carta*, de una encuesta que levantaron. La información que contiene la encuesta proviene de los foodtrucks con 20% más reviews.

```{r, include=FALSE}
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
foodtruck <- read_csv("foodtrucks.csv")
foodtruck20 <- read_csv("foodtrucks20.csv") 
set.seed(69)
```

Nuestros datos se ven de la siguiente manera

```{r, echo = FALSE}
head(foodtruck20)
```

Algunas estadísticas descriptivas

```{r, echo = FALSE}
summary(foodtruck20)
ggplot(foodtruck20, aes(x = Menu_Price)) +
  geom_histogram(binwidth = 1, fill = "#39a8c0", color = "black") +
  theme_minimal() +
  labs(title = "Histograma de Precio Promedio del Platillo",
       x = "Precio Promedio del Platillo",
       y = "Frecuencia")

```

### 1. Intervalo de confianza del 95% de la media de *Menu_Price*

```{r, echo=FALSE}

t_test <- t.test(foodtruck20$Menu_Price, conf.level = 0.95)
cat("Podemos afirmar con un 95% de confianza que el precio promedio \ndel platillo se encuentra entre", "$",t_test$conf.int[1], "y $", t_test$conf.int[2], "MXM \n")

```

### 2. Representatividad

Debido a las sospechas acerca de la representatividad de los datos ya que estos vienen de la revista *CDMX a la Carta* y la forma en la que los recuperaron fue basandose únicamente en el 20% de los food trucks con más reviews. Es muy probable que la muestre se encuentre sesgada ya que posiblemente los food trucks con más reviews sean también los que tienen mayor demanda y esto podría hacer que sus precios sean mayores a los de los food trucks con menos demanda. También se podría dar el caso que los food truck con más cantidad de reviews sean aquellos más baratos y esto sesgaría a nuestra variable de interés para abajo. Sea cual sea el caso, podemos afirmar que nuestra muestra no es representativa de la población.

Para mostrar que no es representativa, podemos hacer uso del censo *foodtruck* el cual contiene información de 1000 foodtrucks. Sin embargo, en el censo solo tenemos acceso al número de clientes, tipo de cocina y al ingreso mensual. Debido a que no tenemos a nuestra variable objetivo en el censo, podemos hacer uso de las preguntas ancla. Nos apoyaremos de la variable número de clientes.

Podemos observar el histograma y la gráfica de distribución de la variable.

```{r, echo=FALSE}

combined_data <- bind_rows(
  foodtruck %>% mutate(Source = "Censo"),
  foodtruck20 %>% mutate(Source = "Muestra")
)

representatividad_hist1 <- ggplot(combined_data, aes(x = Number_of_Customers, fill = Source)) +
  geom_histogram(data = subset(combined_data, Source == "Censo"), 
                 binwidth = 10, alpha = 0.5) +
  geom_histogram(data = subset(combined_data, Source == "Muestra"), 
                 binwidth = 10, alpha = 0.5) +
  scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
  labs(title = "Histograma de Número de Clientes",
       x = "Number of Customers",
       y = "Frecuencia",
       fill = "Fuente") +  
  theme_minimal()

representatividad_dist1 <- ggplot(combined_data, 
       aes(x = Number_of_Customers, color = Source)) +
      geom_density() +
      labs(title = "Distribución de Número de Clientes: Censo vs Muestra",
           x = "Number of Customers",
           y = "Densidad") +
      scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "red")) +
      theme_minimal()


grid.arrange(representatividad_dist1, representatividad_hist1, ncol = 1)
```

Podemos ver claramente como no es la misma distribución, los datos del censo y la muestra tienen diferentes histogramas.

Para poder realizar una muestra representativa y sin sesgos se debió haber realizado un muestreo aleatorio. Para demostrar la diferencia, abajo se muestra la gráfica de distribución y el histograma de los datos obtenidos con muestreo aleatorio del censo *foodtruck*.

```{r, echo=FALSE}
# obtenemos el tamaño de muestra (20% del total del censo)
n <- nrow(foodtruck)
sample_size <- round(0.2 * n)
muestra_aleatoria <- foodtruck[sample(n, sample_size ), ]

combined_data_ma <- bind_rows(
              foodtruck %>% mutate(Source = "Censo"),
              muestra_aleatoria %>% mutate(Source = "Muestra Aleatoria")
              )

representatividad_hist2 <- ggplot(combined_data_ma, 
                                  aes(x = Number_of_Customers, fill = Source)) +
  geom_histogram(data = subset(combined_data, Source == "Censo"), 
                 binwidth = 10, alpha = 0.5) +
  geom_histogram(data = subset(combined_data_ma, Source == "Muestra Aleatoria"), 
                 binwidth = 10, alpha = 0.5) +
  scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
  labs(title = "Histograma de Número de Clientes",
       x = "Number of Customers",
       y = "Frecuencia",
       fill = "Fuente") +  
  theme_minimal()

# Gráfico de densidad para Number_of_Customers
representatividad_dist2 <- ggplot(combined_data_ma, 
       aes(x = Number_of_Customers, color = Source)) +
      geom_density() +
      labs(title = "Distribución de Número de Clientes: Censo vs M.A.",
           x = "Number of Customers",
           y = "Densidad") +
      scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra Aleatoria" = "orange")) +
      theme_minimal()

grid.arrange(representatividad_dist2, representatividad_hist2, ncol = 1)

```

A diferencia de los datos obtenidos con la muestra de *CDMX a la Carta*, podemos ver como con la muestra aleatoria, muestra y datos tienen la misma distribución.

Mientras realizábamos el análisis, hubo un analista creativo al que que durante el reporte nos referiremos como C. C decidió tomar una muestra eligiendo 20 food trucks de cada tipo de comida, para sugerir una muestra. A pesar que su intención no era mala, el realizar una muestra de esta forma introduce un sesgo de selección a los datos ya que está forzando a que los food trucks de todos los alimentos tengan el mismo número de observaciones lo cual no es representativo de la realidad, cabe agregar que su estrategia no es un muestreo aleatorio.

Sin embargo, si tuviéramos que trabajar con la muestra de C, es posible encontrar una solución, ya que en la muestra de C se tiene la misma cantidad de cada food truck por comida y en el censo no, lo que se puede hacer es ver la proporción de cada food truck por tipo de comida en el censo y asignarle una ponderación a ese tipo de comida según su proporción en el censo.

Volviendo a nuestro análisis inicial, si solo nos interesa evaluar el precio promedio por platillo de un tipo de comida en específico, por ejemplo en las taquerías, lo que tendríamos que hacer es filtrar los datos del censo por taquería y ver si nuestra muestra de taquerías es representativa.

```{r, echo=FALSE}
#Tacos


combined_data_tacos <- bind_rows(
  filter(foodtruck, Cuisine_Type == "Tacos") %>% mutate(Source = "Censo"),
  filter(muestra_aleatoria, Cuisine_Type == "Tacos") %>% mutate(Source = "Muestra")
)

# Histograma para taquerías
representatividad_hist_tacos <- ggplot(
  combined_data_tacos, aes(x = Number_of_Customers, fill = Source)) +
  geom_histogram(data = subset(combined_data_tacos, Source == "Censo"), 
                 binwidth = 10, alpha = 0.5) +
  geom_histogram(data = subset(combined_data_tacos, Source == "Muestra"), 
                 binwidth = 10, alpha = 0.5) +
  scale_fill_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
  labs(title = "Histograma de Número de Clientes de Taquerías",
       x = "Number of Customers",
       y = "Frecuencia",
       fill = "Fuente") +  
  theme_minimal()

# Distribución de densidad para taquerías
representatividad_dist_tacos <- ggplot(
  combined_data_tacos, aes(x = Number_of_Customers, color = Source)) +
      geom_density() +
      labs(title = "Distribución de Número de Clientes de Taquerías",
           x = "Number of Customers",
           y = "Densidad") +
      scale_color_manual(values = c("Censo" = "#39a8c0", "Muestra" = "red")) +
      theme_minimal()

grid.arrange(representatividad_dist_tacos, representatividad_hist_tacos, ncol = 1)
```

Podemos ver que las taquería tampoco son una muestra representativa, si deseáramos sacar un muestra representativa de las taquerías, deberíamos de realizar una muestra aleatoria de todas las taquerías.

### 3. Pruebas de Hipótesis.

Debido al particular interes del gobierno en los food trucks de tipo taquería, realizaremos un análisi detallado de la diferencia entre la media del precio promedio por platillo de las taquerías menos la media del precio promedio de los demás tipos de cocina. Para esta sección asumiremos que la muestra que tenemos es representativa y basandonos en ese supuesto realiazaremos nuestro análisis.

Por ahora nos interesa conocer si la media de precio de las taquerías es igual que la media de precio de los otros tipos de comida.

Plateamos la siguiente prueba de hipótesis.

$$
\text{Hipótesis Nula (}H_0\text{):} \quad \mu_{tacos} - \mu_{otros} = 0 \\
\text{Hipótesis Alternativa (}H_1\text{):} \quad \mu_{tacos} - \mu_{otros} \neq 0 \\
$$

Nos apoyaremos del siguiente estadístico de prueba t. $$
t = \frac{\bar{X}_{tacos} - \bar{X}_{otros}}{\sqrt{\frac{S_{tacos}^{2}}{n_{tacos}} + \frac{S_{otros}^{2}}{n_{otros}}}} 
$$ donde:

```{=tex}
\begin{itemize}
  \item $\bar{X}_{otros}$ y $\bar{X}_{tacos}$ son los estimadores de las medias respectivas.
  \item $S_{otros}^{2}$ y $S_{tacos}^{2}$ son los estimadores de las varianzas de los grupos.
  \item $n_{otros}$ y $n_{tacos}$ son los tamaños de las muestras.
\end{itemize}
```
```{r, echo=FALSE}
#count(foodtruck20, Cuisine_Type)
t_test_tacos <- t.test(filter(foodtruck20, Cuisine_Type == "Tacos")$Menu_Price, 
                       filter(foodtruck20, Cuisine_Type != "Tacos")$Menu_Price,
                       conf.level = 0.95)

cat(
"La prueba de hipótesis nos da un P-value de", t_test_tacos$p.value, "por lo que no tenemos \nevidencia suficiente para rechazar la hipótesis nula. Es decir, no podemos decir \nque la media de precios de los tacos sea diferente a la media de los precios \nde los otros foodtrucks.\n"
)

```

*Nota Ejecutiva para el gobierno:*

En el reciente estudio estadístico realizado por nuestra consultoría, nos enfocamos en estudiar, analizar y comparar los precios promedio ofrecidos por los food trucks especializados en tacos con aquellos especializados en otros tipos de cocina. El objetivo era identificar si existía alguna diferencia significativa en los costos de las taquerías con respecto a otros tipos de comida, ya que esto podría impactar al mercado.

Cuando realizamos nuestro análisis estadístico, no encontramos evidencia que sugiera diferencias significativas en los precios promedios entre los food trucks de tacos y sus contrapartes que ofrecen otras variedades de comida. Esto implica que si nos basamos únicamente en nuestros datos no podemos concluir que los tacos son o más caros o ni más baratos que el resto de opciones de comida ofrecida en los food trucks.

### 4. Bootstrap

En los el mundo de la cocina urbana existe una amplia gamma de experiencias gastronómicas. En un extremo se encuentran los food trucks gourmet y en otro los food trucks que atienden el paladar cotidiano. Debido al interés del gobierno en la diferencia de precios vamos a realizar un análisis de la desigualdad de los precios. Para esto utilizaremos el estadístico de interés siguiente.

$$
ratio = \frac{\text{percentil}\ 90}{\text{percentil}\ 10} 
$$


*Bootsrap con muestreo de 200 observaciones*

```{r, echo=FALSE}

# función para el ratio
get_ratio <- function(data){
  p90 <- quantile(data, 0.9)
  p10 <- quantile(data, 0.1)
  
  return(p90/p10)
}

# Vector para guardar los resultados del bootstrap.


#data: dataset (debe tener columna Menu_Price)
#n: tamaño de submuestras
bootstrap_Menu_Price_ratios <- function(data, n){
  repeticiones <- 1000
  bootstrap_ratios <- numeric(repeticiones)
  for(i in 1:repeticiones){
    # Generamos una submuestra aleatoria de tamaño n
    sample_data <- data$Menu_Price[sample(nrow(data), size = n, replace = TRUE)] # Corrección aquí
    
    # Calculamos el ratio para cada submuestra
    bootstrap_ratios[i] <- get_ratio(sample_data)
  }
  
  return(bootstrap_ratios)
}

bootstrap200 <- bootstrap_Menu_Price_ratios(foodtruck20, 200)

mean_bootstrap200 <- mean(bootstrap200)
ic_bootstrap200 <- quantile(bootstrap200, probs = c(0.025, 0.975))


cat("Estimación puntual del ratio:", mean_bootstrap200, " con un intervalo de confianza \ndel 95% entre", ic_bootstrap200," para el ratio con muestras de 200 obs. \n")


hist_bootstrap200 <- ggplot(data.frame(bootstrap200), aes(x = bootstrap200)) +
  geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
  geom_vline(xintercept = ic_bootstrap200[1], color = "red", linetype = "dashed", linewidth = 1) +
  geom_vline(xintercept = ic_bootstrap200[2], color = "red", linetype = "dashed", linewidth = 1) +
  labs(title = "Histograma de Ratios de Bootstrap (muestras de 200) \ncon Intervalo de Confianza del 95%",
       x = "Ratio (Percentil 90 / Percentil 10)",
       y = "Frecuencia") +
  theme_minimal()

hist_bootstrap200


```

*Bootsrap con muestreo de 100 observaciones*


```{r, echo=FALSE}

bootstrap100 <- bootstrap_Menu_Price_ratios(foodtruck20, 100)
mean_bootstrap100 <- mean(bootstrap100)
ic_bootstrap100 <- quantile(bootstrap100, probs = c(0.05, 0.95))

cat("Estimación puntual del ratio:", mean_bootstrap100, " con un intervalo de confianza \ndel 95% entre", ic_bootstrap100," para el ratio con muestras de 100 obs. \n")

# Graficar el histograma con intervalo de confianza del 90%
hist_bootstrap100 <- ggplot(data.frame(bootstrap100), aes(x = bootstrap100)) +
  geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
  geom_vline(xintercept = ic_bootstrap100[1], color = "red", linetype = "dashed", linewidth = 1) +
  geom_vline(xintercept = ic_bootstrap100[2], color = "red", linetype = "dashed", linewidth = 1) +
  labs(title = "Histograma de Ratios de Bootstrap (muestras de 100) \ncon Intervalo de Confianza del 90%",
       x = "Ratio (Percentil 90 / Percentil 10)",
       y = "Frecuencia") +
  theme_minimal()

hist_bootstrap100
```

```{r, echo=FALSE}
# Actualización de la función para incluir el cálculo de la varianza ajustada
#L: tamaño de submuestra
# M: número de repeticiónes
bootstrap_Menu_Price_ratios_var_adjusted <- function(data, L, M){
  n <- nrow(data) # Tamaño de la muestra original
  bootstrap_ratios <- numeric(M) # Para almacenar los ratios calculados en cada repetición
  bootstrap_vars <- numeric(M) # Para almacenar las varianzas ajustadas en cada repetición
  
  for(i in 1:M){ # Repetir M veces
    sample_indices <- sample(n, size = L, replace = TRUE) # Seleccionar una submuestra aleatoria de tamaño L
    sample_data <- data$Menu_Price[sample_indices]
    
    # Calcular el ratio para la submuestra
    ratio <- get_ratio(sample_data)
    bootstrap_ratios[i] <- ratio
    
    # Calcular la varianza ajustada para la submuestra
    Xboot <- mean(sample_data) # Media de la submuestra bootstrap
    var_adjusted <- (n / L) * (1 / (L - 1)) * sum((sample_data - Xboot)^2)
    bootstrap_vars[i] <- var_adjusted
  }
  
  return(list(ratios = bootstrap_ratios, variances = bootstrap_vars))
}

# Tamaño de la muestra original
L <- nrow(foodtruck20)

# Aplicar la función al dataframe foodtruck20 con M = 100
results <- bootstrap_Menu_Price_ratios_var_adjusted(foodtruck20, 100, L)

# Calcular la media de los ratios de bootstrap
mean_bootstrap <- mean(results$ratios)

# Calcular la varianza promedio ajustada de las repeticiones de bootstrap
mean_var_adjusted <- mean(results$variances)


```